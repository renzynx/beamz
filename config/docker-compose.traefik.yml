services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:3333"
      - "--log.level=INFO"
      - "--accesslog=true"
    ports:
      - "3333:3333"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - beamz-network

  beamz:
    image: ghcr.io/renzynx/beamz
    container_name: beamz
    environment:
      - NODE_ENV=production
      - BASE_URL=http://example.com # The URL you are deploying to
      - SECRET=32-characters-random-string-for-secret
    volumes:
      - ./uploads:/app/uploads
      - ./data:/app/data
    networks:
      - beamz-network
    labels:
      - "traefik.enable=true"
      # The labels below configure Traefik to:
      #  - route requests with path prefix /api to the API service on port 3333
      #  - route all other requests to the web service on port 3000
      # The API router has a higher priority so that /api is matched before the web router.
      - "traefik.http.routers.beam-api.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.beam-api.entrypoints=web"
      - "traefik.http.routers.beam-api.priority=10"
      - "traefik.http.routers.beam-api.service=beam-api"
      - "traefik.http.services.beam-api.loadbalancer.server.port=3333"
      # Web service: lower priority so /api is handled by the API router
      - "traefik.http.routers.beam-web.rule=Host(`localhost`) && PathPrefix(`/`)"
      - "traefik.http.routers.beam-web.entrypoints=web"
      - "traefik.http.routers.beam-web.priority=1"
      - "traefik.http.routers.beam-web.service=beam-web"
      - "traefik.http.services.beam-web.loadbalancer.server.port=3000"

networks:
  beamz-network:
    driver: bridge
